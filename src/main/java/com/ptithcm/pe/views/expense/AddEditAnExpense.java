/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.ptithcm.pe.views.expense;

import com.ptithcm.pe.dao.CategoryDAO;
import com.ptithcm.pe.dao.FinancialDAO;
import com.ptithcm.pe.models.Category;
import com.ptithcm.pe.models.Financial;
import com.ptithcm.pe.utilities.Constraints;
import java.awt.*;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author tezcap
 */
public class AddEditAnExpense extends javax.swing.JDialog {

    private static ListOfExpenses panel;
    private static boolean flag;
    private static Financial f;

    /**
     * Creates new form AddNewRevenuesTypeExp
     *
     * @param parent
     * @param modal
     */
    public AddEditAnExpense(java.awt.Frame parent, boolean modal, ListOfExpenses panel, boolean flag) {
        super(parent, modal);
        this.panel = panel;
        this.flag = flag;
        initComponents();
        getDataCombobox();
    }

    public AddEditAnExpense(java.awt.Frame parent, boolean modal, ListOfExpenses panel, Financial f, boolean flag) {
        super(parent, modal);
        this.panel = panel;
        this.flag = flag;
        this.f = f;
        initComponents();
        getDataCombobox();
    }

    public void getDataCombobox() {

        DefaultComboBoxModel<String> model = (DefaultComboBoxModel) cbbCategory.getModel();
        for (Category category : CategoryDAO.getInstance().selectbyType(true)) {
            model.addElement(category.getCategoryName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblType = new javax.swing.JLabel();
        cbbCategory = new javax.swing.JComboBox<>();
        lblDate = new javax.swing.JLabel();
        dcrDate = new com.toedter.calendar.JDateChooser();
        lblTime = new javax.swing.JLabel();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        spinTime = new javax.swing.JSpinner(sm);
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        lnlNote = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 0, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnSave.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCancel.setText("Hủy");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblType.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblType.setText("Phân loại:");

        cbbCategory.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDate.setText("Ngày tháng:");

        Date date2 = java.util.Calendar.getInstance().getTime();
        dcrDate.setDate(date2);
        dcrDate.setDateFormatString("dd-MM-yyyy");
        dcrDate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblTime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTime.setText("Thời gian:");

        JSpinner.DateEditor de = new JSpinner.DateEditor(spinTime, "HH:mm");
        spinTime.setEditor(de);
        spinTime.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtNote.setWrapStyleWord(true);
        txtNote.setLineWrap(true);
        txtNote.setColumns(20);
        txtNote.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNote.setRows(5);
        jScrollPane1.setViewportView(txtNote);

        lnlNote.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lnlNote.setText("Ghi chú:");

        lblAmount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblAmount.setText("Giá trị:");

        txtAmount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(cbbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(dcrDate, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(spinTime, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lnlNote, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcrDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lnlNote, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (JOptionPane.showConfirmDialog(this, Constraints.MESSAGE_CONFRIM_EXIT, Constraints.LABEL_CONFIRM, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        boolean check1;
        check1 = txtAmount.getText().contains(".");
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)){
            if (!Character.isDigit(c) ){
                if (check1)
                    evt.consume();
            } else if (c != '.')
                evt.consume();
        }
    }//GEN-LAST:event_txtAmountKeyTyped

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String categoryName = cbbCategory.getSelectedItem().toString().trim();
        Category category = CategoryDAO.getInstance().selectByName(categoryName);
        Date date = dcrDate.getDate();
        Date time = (Date) spinTime.getValue();
        Date combinedDateTime = combineTimestamp(dcrDate.getDate(), (Date) spinTime.getValue());
        // Chuyển đối tượng Date thành Timestamp
        Timestamp timestamp = new Timestamp(combinedDateTime.getTime());
        String note = txtNote.getText().trim();
        int amount = Integer.parseInt(txtAmount.getText().trim());

        if (categoryName.isEmpty())
            JOptionPane.showMessageDialog(this, Constraints.FINANCIAL_CATEGORY_EMPTY, Constraints.LABEL_ERROR, JOptionPane.ERROR_MESSAGE);
        else if (amount < 1000)
            JOptionPane.showMessageDialog(this, Constraints.FINANCIAL_AMOUNT_SMALL, Constraints.LABEL_ERROR, JOptionPane.ERROR_MESSAGE);
        else {
            if (flag) {
                Financial financial = new Financial(amount, timestamp, note, category.getCategoryId());
                int result = FinancialDAO.getInstance().insert(financial);
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, Constraints.FINANCIAL_ADD_EXPENSE_SUCCESS, Constraints.LABEL_INFORMATION, JOptionPane.INFORMATION_MESSAGE);
                    panel.loadData();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, Constraints.FINANCIAL_ADD_EXPENSE_FAIL, Constraints.LABEL_ERROR, JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                f.setCategoryId(category.getCategoryId());
                f.setAmount(amount);
                f.setDateTime(timestamp);
                f.setNote(note);
                int result = FinancialDAO.getInstance().update(f);
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, Constraints.FINANCIAL_UPDATE_EXPENSE_SUCCESS, Constraints.LABEL_INFORMATION, JOptionPane.INFORMATION_MESSAGE);
                    panel.loadData();
                    panel.txtCategory.setText(cbbCategory.getSelectedItem().toString().trim());
                    panel.txtAmount.setText(txtAmount.getText().trim());
                    panel.txtDate.setText(timestamp.toString());
                    panel.txtNote.setText(txtNote.getText());
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, Constraints.FINANCIAL_UPDATE_EXPENSE_FAIL, Constraints.LABEL_ERROR, JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private Date combineTimestamp(Date date, Date time) {
        // Format lại ngày được chọn
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String dateStr = dateFormat.format(date);

        // Format lại thời gian được chọn
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
        String timeStr = timeFormat.format(time);

        // Ghép chuỗi thời gian
        String dateTime = dateStr + " " + timeStr;
        // Chuyển chuỗi đã ghép thành lại đối tượng Date
        SimpleDateFormat combine = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        try {
            return combine.parse(dateTime);
        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEditAnExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEditAnExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEditAnExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEditAnExpense.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                if (flag) {
                    AddEditAnExpense dialog = new AddEditAnExpense(new javax.swing.JFrame(), true, panel, true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } else {
                    AddEditAnExpense dialog = new AddEditAnExpense(new javax.swing.JFrame(), true, panel, f, false);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    public javax.swing.JComboBox<String> cbbCategory;
    public com.toedter.calendar.JDateChooser dcrDate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblTime;
    public javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lnlNote;
    public javax.swing.JSpinner spinTime;
    public javax.swing.JTextField txtAmount;
    public javax.swing.JTextArea txtNote;
    // End of variables declaration//GEN-END:variables
}
